package migration

import (
	db2 "goERP/config/db"
)

func (m *Migration) Init() error {
	db, err := db2.PgConn()
	if err != nil {
		return err
	}

	defer db2.HandleCloseDb(db)

	_, err = db.Exec(`
		CREATE TABLE IF NOT EXISTS MIGRATIONS(
			MIGRATION_TIMESTAMP TIMESTAMP    UNIQUE  NOT NULL,
			MIGRATION_NAME      VARCHAR(255) NOT NULL,
			MIGRATION_SQL       TEXT,
			MIGRATION_EXECUTED  BOOLEAN      NOT NULL DEFAULT FALSE,
			MIGRATION_EXECUTED_TIMESTAMP TIMESTAMP,
			CONSTRAINT UNIQUE_MIGRATION UNIQUE (MIGRATION_NAME, MIGRATION_TIMESTAMP)
		);
		
		CREATE OR REPLACE FUNCTION TRIGGER_AU_MIGRATIONS() 
		RETURNS TRIGGER AS
		$$
		BEGIN
			IF (NOT OLD.MIGRATION_EXECUTED) AND (NEW.MIGRATION_EXECUTED) THEN 
				NEW.MIGRATION_EXECUTED_TIMESTAMP := CURRENT_TIMESTAMP;
			END IF;
		RETURN NEW;
		END;
		$$ LANGUAGE 'plpgsql';
		
		CREATE OR REPLACE TRIGGER TRIGGER_AU_MIGRATIONS
				BEFORE UPDATE ON MIGRATIONS
				FOR EACH ROW EXECUTE PROCEDURE TRIGGER_AU_MIGRATIONS();
	`)

	if err != nil {
		return err
	}

	return nil
}
